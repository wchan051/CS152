Terminals unused in grammar

   EQUAL


Grammar

    0 $accept: program $end

    1 program: function program
    2        | %empty

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    4 b_func: IDENT

    5 function_2: statement SEMICOLON function_2
    6           | ENDBODY

    7 decl_loop: declaration SEMICOLON decl_loop
    8          | %empty

    9 stmt_loop: statement SEMICOLON stmt_loop
   10          | %empty

   11 declaration: IDENT declaration_2

   12 declaration_2: COMMA IDENT declaration_2
   13              | COLON declaration_3 INTEGER

   14 declaration_3: ARRAY LSQUARE NUMBER RSQUARE OF
   15              | %empty

   16 statement: statement_1
   17          | statement_2
   18          | statement_3
   19          | statement_4
   20          | statement_5
   21          | statement_6
   22          | CONTINUE
   23          | RETURN expression

   24 statement_1: var ASSIGN expression

   25 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF

   26 statement_21: %empty
   27             | ELSE stmt_loop

   28 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP

   29 b_loop: %empty

   30 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

   31 statement_5: READ var statement_51

   32 statement_51: COMMA var statement_51
   33             | %empty

   34 statement_6: WRITE var statement_61

   35 statement_61: COMMA var statement_61
   36             | %empty

   37 bool_exp: rel_and_exp bool_exp2

   38 bool_exp2: OR rel_and_exp bool_exp2
   39          | %empty

   40 rel_and_exp: relation_exp rel_and_exp2

   41 rel_and_exp2: AND relation_exp rel_and_exp2
   42             | %empty

   43 relation_exp: relation_exp_s
   44             | NOT relation_exp_s

   45 relation_exp_s: expression comp expression
   46               | TRUE
   47               | FALSE
   48               | LPAREN bool_exp RPAREN

   49 comp: EQ
   50     | NEQ
   51     | LT
   52     | GT
   53     | LTE
   54     | GTE

   55 expression: mult_expr expression_2

   56 expression_2: ADD mult_expr expression_2
   57             | SUB mult_expr expression_2
   58             | %empty

   59 mult_expr: term mult_expr_2

   60 mult_expr_2: MULT term mult_expr_2
   61            | DIV term mult_expr_2
   62            | MOD term mult_expr_2
   63            | %empty

   64 term: SUB term_2
   65     | term_2
   66     | term_3

   67 term_2: var
   68       | NUMBER
   69       | LPAREN expression RPAREN

   70 term_3: IDENT LPAREN term_31 RPAREN

   71 term_31: expression term_32
   72        | %empty

   73 term_32: COMMA term_31
   74        | %empty

   75 var: IDENT var_2

   76 var_2: LSQUARE expression RSQUARE
   77      | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGINPARAMS (259) 3
ENDPARAMS (260) 3
BEGINLOCALS (261) 3
ENDLOCALS (262) 3
BEGINBODY (263) 3
ENDBODY (264) 6
INTEGER (265) 13
ARRAY (266) 14
OF (267) 14
IF (268) 25
THEN (269) 25
ENDIF (270) 25
ELSE (271) 27
WHILE (272) 28 30
DO (273) 30
BEGINLOOP (274) 28 30
ENDLOOP (275) 28 30
CONTINUE (276) 22
READ (277) 31
WRITE (278) 34
TRUE (279) 46
FALSE (280) 47
RETURN (281) 23
SEMICOLON (282) 3 5 7 9
COLON (283) 13
COMMA (284) 12 32 35 73
LPAREN (285) 48 69 70
RPAREN (286) 48 69 70
LSQUARE (287) 14 76
RSQUARE (288) 14 76
EQUAL (289)
NUMBER (290) 14 68
IDENT (291) 4 11 12 70 75
MULT (292) 60
DIV (293) 61
MOD (294) 62
ADD (295) 56
SUB (296) 57 64
LT (297) 51
LTE (298) 53
GT (299) 52
GTE (300) 54
EQ (301) 49
NEQ (302) 50
NOT (303) 44
AND (304) 41
OR (305) 38
ASSIGN (306) 24


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 1
function (54)
    on left: 3, on right: 1
b_func (55)
    on left: 4, on right: 3
function_2 (56)
    on left: 5 6, on right: 3 5
decl_loop (57)
    on left: 7 8, on right: 3 7
stmt_loop (58)
    on left: 9 10, on right: 9 25 27 28 30
declaration (59)
    on left: 11, on right: 7
declaration_2 (60)
    on left: 12 13, on right: 11 12
declaration_3 (61)
    on left: 14 15, on right: 13
statement (62)
    on left: 16 17 18 19 20 21 22 23, on right: 3 5 9
statement_1 (63)
    on left: 24, on right: 16
statement_2 (64)
    on left: 25, on right: 17
statement_21 (65)
    on left: 26 27, on right: 25
statement_3 (66)
    on left: 28, on right: 18
b_loop (67)
    on left: 29, on right: 28 30
statement_4 (68)
    on left: 30, on right: 19
statement_5 (69)
    on left: 31, on right: 20
statement_51 (70)
    on left: 32 33, on right: 31 32
statement_6 (71)
    on left: 34, on right: 21
statement_61 (72)
    on left: 35 36, on right: 34 35
bool_exp (73)
    on left: 37, on right: 25 28 30 48
bool_exp2 (74)
    on left: 38 39, on right: 37 38
rel_and_exp (75)
    on left: 40, on right: 37 38
rel_and_exp2 (76)
    on left: 41 42, on right: 40 41
relation_exp (77)
    on left: 43 44, on right: 40 41
relation_exp_s (78)
    on left: 45 46 47 48, on right: 43 44
comp (79)
    on left: 49 50 51 52 53 54, on right: 45
expression (80)
    on left: 55, on right: 23 24 45 69 71 76
expression_2 (81)
    on left: 56 57 58, on right: 55 56 57
mult_expr (82)
    on left: 59, on right: 55 56 57
mult_expr_2 (83)
    on left: 60 61 62 63, on right: 59 60 61 62
term (84)
    on left: 64 65 66, on right: 59 60 61 62
term_2 (85)
    on left: 67 68 69, on right: 64 65
term_3 (86)
    on left: 70, on right: 66
term_31 (87)
    on left: 71 72, on right: 70 73
term_32 (88)
    on left: 73 74, on right: 71
var (89)
    on left: 75, on right: 24 31 32 34 35 67
var_2 (90)
    on left: 76 77, on right: 75


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    IDENT  shift, and go to state 4

    b_func  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 3


State 4

    4 b_func: IDENT .

    $default  reduce using rule 4 (b_func)


State 5

    3 function: FUNCTION b_func . SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    1 program: function program .

    $default  reduce using rule 1 (program)


State 8

    3 function: FUNCTION b_func SEMICOLON . BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    BEGINPARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS . decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (decl_loop)

    decl_loop    go to state 11
    declaration  go to state 12


State 10

   11 declaration: IDENT . declaration_2

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14

    declaration_2  go to state 15


State 11

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop . ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    ENDPARAMS  shift, and go to state 16


State 12

    7 decl_loop: declaration . SEMICOLON decl_loop

    SEMICOLON  shift, and go to state 17


State 13

   13 declaration_2: COLON . declaration_3 INTEGER

    ARRAY  shift, and go to state 18

    $default  reduce using rule 15 (declaration_3)

    declaration_3  go to state 19


State 14

   12 declaration_2: COMMA . IDENT declaration_2

    IDENT  shift, and go to state 20


State 15

   11 declaration: IDENT declaration_2 .

    $default  reduce using rule 11 (declaration)


State 16

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS . BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    BEGINLOCALS  shift, and go to state 21


State 17

    7 decl_loop: declaration SEMICOLON . decl_loop

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (decl_loop)

    decl_loop    go to state 22
    declaration  go to state 12


State 18

   14 declaration_3: ARRAY . LSQUARE NUMBER RSQUARE OF

    LSQUARE  shift, and go to state 23


State 19

   13 declaration_2: COLON declaration_3 . INTEGER

    INTEGER  shift, and go to state 24


State 20

   12 declaration_2: COMMA IDENT . declaration_2

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14

    declaration_2  go to state 25


State 21

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS . decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2

    IDENT  shift, and go to state 10

    $default  reduce using rule 8 (decl_loop)

    decl_loop    go to state 26
    declaration  go to state 12


State 22

    7 decl_loop: declaration SEMICOLON decl_loop .

    $default  reduce using rule 7 (decl_loop)


State 23

   14 declaration_3: ARRAY LSQUARE . NUMBER RSQUARE OF

    NUMBER  shift, and go to state 27


State 24

   13 declaration_2: COLON declaration_3 INTEGER .

    $default  reduce using rule 13 (declaration_2)


State 25

   12 declaration_2: COMMA IDENT declaration_2 .

    $default  reduce using rule 12 (declaration_2)


State 26

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop . ENDLOCALS BEGINBODY statement SEMICOLON function_2

    ENDLOCALS  shift, and go to state 28


State 27

   14 declaration_3: ARRAY LSQUARE NUMBER . RSQUARE OF

    RSQUARE  shift, and go to state 29


State 28

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS . BEGINBODY statement SEMICOLON function_2

    BEGINBODY  shift, and go to state 30


State 29

   14 declaration_3: ARRAY LSQUARE NUMBER RSQUARE . OF

    OF  shift, and go to state 31


State 30

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY . statement SEMICOLON function_2

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    statement    go to state 40
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 31

   14 declaration_3: ARRAY LSQUARE NUMBER RSQUARE OF .

    $default  reduce using rule 14 (declaration_3)


State 32

   25 statement_2: IF . bool_exp THEN stmt_loop statement_21 ENDIF

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    bool_exp        go to state 55
    rel_and_exp     go to state 56
    relation_exp    go to state 57
    relation_exp_s  go to state 58
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 33

   28 statement_3: WHILE . bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    bool_exp        go to state 65
    rel_and_exp     go to state 56
    relation_exp    go to state 57
    relation_exp_s  go to state 58
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 34

   30 statement_4: DO . b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    $default  reduce using rule 29 (b_loop)

    b_loop  go to state 66


State 35

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 36

   31 statement_5: READ . var statement_51

    IDENT  shift, and go to state 39

    var  go to state 67


State 37

   34 statement_6: WRITE . var statement_61

    IDENT  shift, and go to state 39

    var  go to state 68


State 38

   23 statement: RETURN . expression

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    expression  go to state 70
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    var         go to state 64


State 39

   75 var: IDENT . var_2

    LSQUARE  shift, and go to state 71

    $default  reduce using rule 77 (var_2)

    var_2  go to state 72


State 40

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement . SEMICOLON function_2

    SEMICOLON  shift, and go to state 73


State 41

   16 statement: statement_1 .

    $default  reduce using rule 16 (statement)


State 42

   17 statement: statement_2 .

    $default  reduce using rule 17 (statement)


State 43

   18 statement: statement_3 .

    $default  reduce using rule 18 (statement)


State 44

   19 statement: statement_4 .

    $default  reduce using rule 19 (statement)


State 45

   20 statement: statement_5 .

    $default  reduce using rule 20 (statement)


State 46

   21 statement: statement_6 .

    $default  reduce using rule 21 (statement)


State 47

   24 statement_1: var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 48

   46 relation_exp_s: TRUE .

    $default  reduce using rule 46 (relation_exp_s)


State 49

   47 relation_exp_s: FALSE .

    $default  reduce using rule 47 (relation_exp_s)


State 50

   48 relation_exp_s: LPAREN . bool_exp RPAREN
   69 term_2: LPAREN . expression RPAREN

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    bool_exp        go to state 75
    rel_and_exp     go to state 56
    relation_exp    go to state 57
    relation_exp_s  go to state 58
    expression      go to state 76
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 51

   68 term_2: NUMBER .

    $default  reduce using rule 68 (term_2)


State 52

   70 term_3: IDENT . LPAREN term_31 RPAREN
   75 var: IDENT . var_2

    LPAREN   shift, and go to state 77
    LSQUARE  shift, and go to state 71

    $default  reduce using rule 77 (var_2)

    var_2  go to state 72


State 53

   64 term: SUB . term_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 39

    term_2  go to state 78
    var     go to state 64


State 54

   44 relation_exp: NOT . relation_exp_s

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    relation_exp_s  go to state 79
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 55

   25 statement_2: IF bool_exp . THEN stmt_loop statement_21 ENDIF

    THEN  shift, and go to state 80


State 56

   37 bool_exp: rel_and_exp . bool_exp2

    OR  shift, and go to state 81

    $default  reduce using rule 39 (bool_exp2)

    bool_exp2  go to state 82


State 57

   40 rel_and_exp: relation_exp . rel_and_exp2

    AND  shift, and go to state 83

    $default  reduce using rule 42 (rel_and_exp2)

    rel_and_exp2  go to state 84


State 58

   43 relation_exp: relation_exp_s .

    $default  reduce using rule 43 (relation_exp)


State 59

   45 relation_exp_s: expression . comp expression

    LT   shift, and go to state 85
    LTE  shift, and go to state 86
    GT   shift, and go to state 87
    GTE  shift, and go to state 88
    EQ   shift, and go to state 89
    NEQ  shift, and go to state 90

    comp  go to state 91


State 60

   55 expression: mult_expr . expression_2

    ADD  shift, and go to state 92
    SUB  shift, and go to state 93

    $default  reduce using rule 58 (expression_2)

    expression_2  go to state 94


State 61

   59 mult_expr: term . mult_expr_2

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 63 (mult_expr_2)

    mult_expr_2  go to state 98


State 62

   65 term: term_2 .

    $default  reduce using rule 65 (term)


State 63

   66 term: term_3 .

    $default  reduce using rule 66 (term)


State 64

   67 term_2: var .

    $default  reduce using rule 67 (term_2)


State 65

   28 statement_3: WHILE bool_exp . b_loop BEGINLOOP stmt_loop ENDLOOP

    $default  reduce using rule 29 (b_loop)

    b_loop  go to state 99


State 66

   30 statement_4: DO b_loop . BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 100


State 67

   31 statement_5: READ var . statement_51

    COMMA  shift, and go to state 101

    $default  reduce using rule 33 (statement_51)

    statement_51  go to state 102


State 68

   34 statement_6: WRITE var . statement_61

    COMMA  shift, and go to state 103

    $default  reduce using rule 36 (statement_61)

    statement_61  go to state 104


State 69

   69 term_2: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    expression  go to state 105
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    var         go to state 64


State 70

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 71

   76 var_2: LSQUARE . expression RSQUARE

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    expression  go to state 106
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    var         go to state 64


State 72

   75 var: IDENT var_2 .

    $default  reduce using rule 75 (var)


State 73

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON . function_2

    ENDBODY   shift, and go to state 107
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    function_2   go to state 108
    statement    go to state 109
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 74

   24 statement_1: var ASSIGN . expression

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    expression  go to state 110
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    var         go to state 64


State 75

   48 relation_exp_s: LPAREN bool_exp . RPAREN

    RPAREN  shift, and go to state 111


State 76

   45 relation_exp_s: expression . comp expression
   69 term_2: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 112
    LT      shift, and go to state 85
    LTE     shift, and go to state 86
    GT      shift, and go to state 87
    GTE     shift, and go to state 88
    EQ      shift, and go to state 89
    NEQ     shift, and go to state 90

    comp  go to state 91


State 77

   70 term_3: IDENT LPAREN . term_31 RPAREN

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    $default  reduce using rule 72 (term_31)

    expression  go to state 113
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    term_31     go to state 114
    var         go to state 64


State 78

   64 term: SUB term_2 .

    $default  reduce using rule 64 (term)


State 79

   44 relation_exp: NOT relation_exp_s .

    $default  reduce using rule 44 (relation_exp)


State 80

   25 statement_2: IF bool_exp THEN . stmt_loop statement_21 ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (stmt_loop)

    stmt_loop    go to state 115
    statement    go to state 116
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 81

   38 bool_exp2: OR . rel_and_exp bool_exp2

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    rel_and_exp     go to state 117
    relation_exp    go to state 57
    relation_exp_s  go to state 58
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 82

   37 bool_exp: rel_and_exp bool_exp2 .

    $default  reduce using rule 37 (bool_exp)


State 83

   41 rel_and_exp2: AND . relation_exp rel_and_exp2

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    relation_exp    go to state 118
    relation_exp_s  go to state 58
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 84

   40 rel_and_exp: relation_exp rel_and_exp2 .

    $default  reduce using rule 40 (rel_and_exp)


State 85

   51 comp: LT .

    $default  reduce using rule 51 (comp)


State 86

   53 comp: LTE .

    $default  reduce using rule 53 (comp)


State 87

   52 comp: GT .

    $default  reduce using rule 52 (comp)


State 88

   54 comp: GTE .

    $default  reduce using rule 54 (comp)


State 89

   49 comp: EQ .

    $default  reduce using rule 49 (comp)


State 90

   50 comp: NEQ .

    $default  reduce using rule 50 (comp)


State 91

   45 relation_exp_s: expression comp . expression

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    expression  go to state 119
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    var         go to state 64


State 92

   56 expression_2: ADD . mult_expr expression_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    mult_expr  go to state 120
    term       go to state 61
    term_2     go to state 62
    term_3     go to state 63
    var        go to state 64


State 93

   57 expression_2: SUB . mult_expr expression_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    mult_expr  go to state 121
    term       go to state 61
    term_2     go to state 62
    term_3     go to state 63
    var        go to state 64


State 94

   55 expression: mult_expr expression_2 .

    $default  reduce using rule 55 (expression)


State 95

   60 mult_expr_2: MULT . term mult_expr_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    term    go to state 122
    term_2  go to state 62
    term_3  go to state 63
    var     go to state 64


State 96

   61 mult_expr_2: DIV . term mult_expr_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    term    go to state 123
    term_2  go to state 62
    term_3  go to state 63
    var     go to state 64


State 97

   62 mult_expr_2: MOD . term mult_expr_2

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    term    go to state 124
    term_2  go to state 62
    term_3  go to state 63
    var     go to state 64


State 98

   59 mult_expr: term mult_expr_2 .

    $default  reduce using rule 59 (mult_expr)


State 99

   28 statement_3: WHILE bool_exp b_loop . BEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 125


State 100

   30 statement_4: DO b_loop BEGINLOOP . stmt_loop ENDLOOP WHILE bool_exp

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (stmt_loop)

    stmt_loop    go to state 126
    statement    go to state 116
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 101

   32 statement_51: COMMA . var statement_51

    IDENT  shift, and go to state 39

    var  go to state 127


State 102

   31 statement_5: READ var statement_51 .

    $default  reduce using rule 31 (statement_5)


State 103

   35 statement_61: COMMA . var statement_61

    IDENT  shift, and go to state 39

    var  go to state 128


State 104

   34 statement_6: WRITE var statement_61 .

    $default  reduce using rule 34 (statement_6)


State 105

   69 term_2: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 112


State 106

   76 var_2: LSQUARE expression . RSQUARE

    RSQUARE  shift, and go to state 129


State 107

    6 function_2: ENDBODY .

    $default  reduce using rule 6 (function_2)


State 108

    3 function: FUNCTION b_func SEMICOLON BEGINPARAMS decl_loop ENDPARAMS BEGINLOCALS decl_loop ENDLOCALS BEGINBODY statement SEMICOLON function_2 .

    $default  reduce using rule 3 (function)


State 109

    5 function_2: statement . SEMICOLON function_2

    SEMICOLON  shift, and go to state 130


State 110

   24 statement_1: var ASSIGN expression .

    $default  reduce using rule 24 (statement_1)


State 111

   48 relation_exp_s: LPAREN bool_exp RPAREN .

    $default  reduce using rule 48 (relation_exp_s)


State 112

   69 term_2: LPAREN expression RPAREN .

    $default  reduce using rule 69 (term_2)


State 113

   71 term_31: expression . term_32

    COMMA  shift, and go to state 131

    $default  reduce using rule 74 (term_32)

    term_32  go to state 132


State 114

   70 term_3: IDENT LPAREN term_31 . RPAREN

    RPAREN  shift, and go to state 133


State 115

   25 statement_2: IF bool_exp THEN stmt_loop . statement_21 ENDIF

    ELSE  shift, and go to state 134

    $default  reduce using rule 26 (statement_21)

    statement_21  go to state 135


State 116

    9 stmt_loop: statement . SEMICOLON stmt_loop

    SEMICOLON  shift, and go to state 136


State 117

   38 bool_exp2: OR rel_and_exp . bool_exp2

    OR  shift, and go to state 81

    $default  reduce using rule 39 (bool_exp2)

    bool_exp2  go to state 137


State 118

   41 rel_and_exp2: AND relation_exp . rel_and_exp2

    AND  shift, and go to state 83

    $default  reduce using rule 42 (rel_and_exp2)

    rel_and_exp2  go to state 138


State 119

   45 relation_exp_s: expression comp expression .

    $default  reduce using rule 45 (relation_exp_s)


State 120

   56 expression_2: ADD mult_expr . expression_2

    ADD  shift, and go to state 92
    SUB  shift, and go to state 93

    $default  reduce using rule 58 (expression_2)

    expression_2  go to state 139


State 121

   57 expression_2: SUB mult_expr . expression_2

    ADD  shift, and go to state 92
    SUB  shift, and go to state 93

    $default  reduce using rule 58 (expression_2)

    expression_2  go to state 140


State 122

   60 mult_expr_2: MULT term . mult_expr_2

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 63 (mult_expr_2)

    mult_expr_2  go to state 141


State 123

   61 mult_expr_2: DIV term . mult_expr_2

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 63 (mult_expr_2)

    mult_expr_2  go to state 142


State 124

   62 mult_expr_2: MOD term . mult_expr_2

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 63 (mult_expr_2)

    mult_expr_2  go to state 143


State 125

   28 statement_3: WHILE bool_exp b_loop BEGINLOOP . stmt_loop ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (stmt_loop)

    stmt_loop    go to state 144
    statement    go to state 116
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 126

   30 statement_4: DO b_loop BEGINLOOP stmt_loop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 145


State 127

   32 statement_51: COMMA var . statement_51

    COMMA  shift, and go to state 101

    $default  reduce using rule 33 (statement_51)

    statement_51  go to state 146


State 128

   35 statement_61: COMMA var . statement_61

    COMMA  shift, and go to state 103

    $default  reduce using rule 36 (statement_61)

    statement_61  go to state 147


State 129

   76 var_2: LSQUARE expression RSQUARE .

    $default  reduce using rule 76 (var_2)


State 130

    5 function_2: statement SEMICOLON . function_2

    ENDBODY   shift, and go to state 107
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    function_2   go to state 148
    statement    go to state 109
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 131

   73 term_32: COMMA . term_31

    LPAREN  shift, and go to state 69
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53

    $default  reduce using rule 72 (term_31)

    expression  go to state 113
    mult_expr   go to state 60
    term        go to state 61
    term_2      go to state 62
    term_3      go to state 63
    term_31     go to state 149
    var         go to state 64


State 132

   71 term_31: expression term_32 .

    $default  reduce using rule 71 (term_31)


State 133

   70 term_3: IDENT LPAREN term_31 RPAREN .

    $default  reduce using rule 70 (term_3)


State 134

   27 statement_21: ELSE . stmt_loop

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (stmt_loop)

    stmt_loop    go to state 150
    statement    go to state 116
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 135

   25 statement_2: IF bool_exp THEN stmt_loop statement_21 . ENDIF

    ENDIF  shift, and go to state 151


State 136

    9 stmt_loop: statement SEMICOLON . stmt_loop

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (stmt_loop)

    stmt_loop    go to state 152
    statement    go to state 116
    statement_1  go to state 41
    statement_2  go to state 42
    statement_3  go to state 43
    statement_4  go to state 44
    statement_5  go to state 45
    statement_6  go to state 46
    var          go to state 47


State 137

   38 bool_exp2: OR rel_and_exp bool_exp2 .

    $default  reduce using rule 38 (bool_exp2)


State 138

   41 rel_and_exp2: AND relation_exp rel_and_exp2 .

    $default  reduce using rule 41 (rel_and_exp2)


State 139

   56 expression_2: ADD mult_expr expression_2 .

    $default  reduce using rule 56 (expression_2)


State 140

   57 expression_2: SUB mult_expr expression_2 .

    $default  reduce using rule 57 (expression_2)


State 141

   60 mult_expr_2: MULT term mult_expr_2 .

    $default  reduce using rule 60 (mult_expr_2)


State 142

   61 mult_expr_2: DIV term mult_expr_2 .

    $default  reduce using rule 61 (mult_expr_2)


State 143

   62 mult_expr_2: MOD term mult_expr_2 .

    $default  reduce using rule 62 (mult_expr_2)


State 144

   28 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 153


State 145

   30 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 154


State 146

   32 statement_51: COMMA var statement_51 .

    $default  reduce using rule 32 (statement_51)


State 147

   35 statement_61: COMMA var statement_61 .

    $default  reduce using rule 35 (statement_61)


State 148

    5 function_2: statement SEMICOLON function_2 .

    $default  reduce using rule 5 (function_2)


State 149

   73 term_32: COMMA term_31 .

    $default  reduce using rule 73 (term_32)


State 150

   27 statement_21: ELSE stmt_loop .

    $default  reduce using rule 27 (statement_21)


State 151

   25 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF .

    $default  reduce using rule 25 (statement_2)


State 152

    9 stmt_loop: statement SEMICOLON stmt_loop .

    $default  reduce using rule 9 (stmt_loop)


State 153

   28 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 28 (statement_3)


State 154

   30 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE . bool_exp

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    LPAREN  shift, and go to state 50
    NUMBER  shift, and go to state 51
    IDENT   shift, and go to state 52
    SUB     shift, and go to state 53
    NOT     shift, and go to state 54

    bool_exp        go to state 155
    rel_and_exp     go to state 56
    relation_exp    go to state 57
    relation_exp_s  go to state 58
    expression      go to state 59
    mult_expr       go to state 60
    term            go to state 61
    term_2          go to state 62
    term_3          go to state 63
    var             go to state 64


State 155

   30 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 30 (statement_4)
